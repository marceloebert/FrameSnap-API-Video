name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          SERVICES: "s3,dynamodb,sqs"
          DEBUG: "1"
          DATA_DIR: "/tmp/localstack/data"
          DOCKER_HOST: "unix:///var/run/docker.sock"
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Gradle
      run: |
        echo "org.gradle.warning.mode=none" >> gradle.properties

    - name: Setup LocalStack
      run: |
        aws --endpoint-url=http://localhost:4566 s3 mb s3://test-bucket
        aws --endpoint-url=http://localhost:4566 dynamodb create-table \
          --table-name test-table \
          --attribute-definitions AttributeName=id,AttributeType=S \
          --key-schema AttributeName=id,KeyType=HASH \
          --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
        aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name test-queue

    - name: Test with Gradle
      env:
        AWS_ACCESS_KEY_ID: test
        AWS_SECRET_ACCESS_KEY: test
        AWS_REGION: us-east-1
        SPRING_PROFILES_ACTIVE: test
      run: ./gradlew clean test jacocoTestReport

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: build/reports/tests/test/ 